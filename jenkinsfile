pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the application using Maven.'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit tests and integration tests.'
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Analyzing code with SonarQube.'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Performing security scan with OWASP ZAP.'
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying application to AWS EC2 staging instance.'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests in the staging environment.'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying application to AWS EC2 production instance.'
            }
        }
    }
    post {
        success { 
            mail to: 'samborathanak8611@gmail.com',
            subject: "Pipeline success - Build #${env.BUILD_NUMBER}", 
            body: "The pipeline has completed all the stages successfully. Build logs are attached."
        }
        failure {
            mail to: 'samborathanak8611@gmail.com',
            subject: "Pipeline failure - Build #${env.BUILD_NUMBER}",
            body: "The pipeline has failed at stage ${env.STAGE_NAME}. Build logs are attached."
        }
    }
}

