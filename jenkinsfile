pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the application with Maven'
                sh 'mvn clean install'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit tests with JUnit'
                sh 'mvn test'
                echo 'Running integration tests with Selenium'
                sh 'mvn verify'
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Analyzing code quality with SonarQube'
                sh 'mvn sonar:sonar'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Performing security scan with OWASP ZAP'
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging environment on AWS EC2'
                sh 'ansible-playbook -i inventory/staging deploy_app.yml'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging environment'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production environment on AWS EC2'
                sh 'ansible-playbook -i inventory/production deploy_app.yml'
            }
        }
    }
    post {
        success { 
            mail to: "samborathanak8611@gmail.com",
            subject: "Pipeline success - Build #${env.BUILD_NUMBER}", 
            body: "The pipeline has completed all the stages successfully. Build logs are attached."
        }
        failure {
            mail to: "samborathanak8611@gmail.com",
            subject: "Pipeline failure - Build #${env.BUILD_NUMBER}",
            body: "The pipeline has failed at stage ${env.STAGE_NAME}. Build logs are attached."
        }
    }
}
